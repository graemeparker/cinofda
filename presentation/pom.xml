<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>adfonic-presentation</artifactId>
	<packaging>jar</packaging>
	<name>Adfonic Presentation</name>

	<!-- Shared base POM configuration -->
	<parent>
		<groupId>com.adfonic</groupId>
		<artifactId>parent</artifactId>
		<version>5.0.38-SNAPSHOT</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>com.adfonic</groupId>
			<artifactId>adfonic-domain</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.adfonic</groupId>
			<artifactId>adfonic-util</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.1.6</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.ocpsoft</groupId>
			<artifactId>prettyfaces-jsf2</artifactId>
			<scope>compile</scope>
		</dependency>
		
		<!-- springframework dependency -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.adfonic</groupId>
			<artifactId>adfonic-logging</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.adfonic</groupId>
			<artifactId>adfonic-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>2.1.6</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jsp_2.1_spec</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
	        <groupId>org.apache.poi</groupId>
	        <artifactId>poi</artifactId>
	    </dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
		</dependency>
		
		<!-- JAWR library -->
		<dependency>
			<groupId>net.jawr</groupId>
			<artifactId>jawr-core</artifactId>
			<scope>compile</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${org.apache.maven.plugins.maven-surefire-plugin.version}</version>
				<configuration>
					<classpathDependencyExcludes>
						<!-- This is required to avoid using half-ass classes in unit tests. 
							We use Glassfish to provide impls for our test scope. -->
						<classpathDependencyExclude>javax:javaee-web-api</classpathDependencyExclude>
					</classpathDependencyExcludes>
					<!-- <argLine>-Xmx3g</argLine> -->
					<systemPropertyVariables>
						<java.util.logging.config.file>src/test/resources/logging.properties</java.util.logging.config.file>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
