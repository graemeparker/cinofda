<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
       http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">
       
       <!-- Replaced by AdserverSpringConfig -->
<!--
	<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="false"/>
		<property name="ignoreResourceNotFound" value="false"/>
		<property name="locations">
			<list>
				<value>file:${adfonic.config.home:/usr/local/adfonic/config}/adfonic-adserver.properties
				</value>
			</list>
		</property>
	</bean>

	<context:annotation-config/>
	<bean class="com.adfonic.adserver.spring.config.AdserverSpringConfig" />
	
	<import resource="classpath:${adserver.impcache.config:adfonic-adserver-citrusleaf.xml}"/>
	
	<context:component-scan base-package="com.adfonic.adserver">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.context.annotation.Configuration" />
		<context:exclude-filter type="regex" expression="com\.adfonic\.adserver\.view\..*" />
	</context:component-scan>

	<bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
		<property name="daemon" value="true"/>
		<property name="threadNamePrefix" value="adserver-schexec-"/>
		<property name="poolSize" value="10" />
	</bean>

	<task:annotation-driven executor="executor" scheduler="executor" />

	<task:scheduled-tasks scheduler="executor">
		<task:scheduled ref="adEventLogger" method="flushBatches" fixed-rate="${AdEventLogger.batch.durationMs}" />
	</task:scheduled-tasks>

	<context:annotation-config />

	<context:mbean-export />

	<bean name="AdfonicCounters:mbean=GenericCounters" class="com.adfonic.util.stats.CounterJmxManager" />
-->
	<!-- Initialize TimeZoneUtils, taking the hit on that prior to the first  ad request -->
<!--
	<bean id="initializeTimeZoneUtils" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="com.adfonic.util.TimeZoneUtils.getTimeZoneNonBlocking"/>
		<property name="arguments">
			<list>
				<value>Europe/London</value>
			</list>
		</property>
	</bean>

	<jms:listener-container connection-factory="centralJmsConnectionFactory" destination-type="topic" concurrency="1">
    <jms:listener destination="${DomainCache.reserializedJmsTopic}" ref="domainCacheManager" method="onCacheReserialized"/>
    <jms:listener destination="adfonic.status.change" ref="statusChangeManager" method="onStatusChange"/>
    <jms:listener destination="adfonic.stopAdvertiser" ref="stoppageManager" method="onStopAdvertiser"/>
    <jms:listener destination="adfonic.unStopAdvertiser" ref="stoppageManager" method="onUnStopAdvertiser"/>
    <jms:listener destination="adfonic.stopCampaign" ref="stoppageManager" method="onStopCampaign"/>
    <jms:listener destination="adfonic.unStopCampaign" ref="stoppageManager" method="onUnStopCampaign"/>
  </jms:listener-container>
-->
</beans>