# The "Central" ActiveMQ cluster connection pool properties
central.jms.broker.url=failover:(tcp://qaadmq01:61616)
central.jms.pool.maxConnections=10

# The "Ad Event" ActiveMQ cluster connection pool properties
adevent.jms.broker.url=failover:(tcp://qaadmq01:61616)
adevent.jms.pool.maxConnections=10


weveBeaconUrl=localhost/weve

# AdEvent ActiveMQ tuning parameters
adevent.jms.alwaysSessionAsync=false
adevent.jms.copyMessageOnSend=false
adevent.jms.disableTimeStampsByDefault=true
adevent.jms.dispatchAsync=true
adevent.jms.useAsyncSend=false
adevent.jms.useCompression=false

# Root directory where the embedded HornetQ broker persists its data
hornetq.embedded.dataDirectory=/usr/local/adfonic/hornetq-data

# Optional override of minLargeMessageSize (default is 100kb)
hornetq.embedded.minLargeMessageSize=500000

# Concurrency on the route from embedded -> admq
embeddedToAdmq.concurrentConsumers=10
embeddedToAdmq.batch.concurrentConsumers=4
embeddedToAdmq.click.concurrentConsumers=2

# Email address for alerts
mail.address.ALERT="byyd Alert System" <alert@byyd-tech.com>

# DDR Device Atlas Service (S3)
ddr.deviceatlas.serviceimpl=com.adfonic.ddr.deviceatlas.DdrDeviceAtlasS3ServiceImpl
ddr.deviceatlas.s3.accessKey=AKIAJCN3TZMFPF4EQHCA
ddr.deviceatlas.s3.secretKey=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
ddr.deviceatlas.s3.bucket=byydtech.ire.adserverqa.resources
ddr.deviceatlas.s3.key=deviceatlas
ddr.deviceatlas.s3.compressed=true
ddr.deviceatlas.s3.cronschedule=0 0/5 * * * ?

# DDR Device Atlas Service (Simulation ONLY FOR TEST PURPOSES!!!)
ddr.deviceatlas.serviceimpl=com.adfonic.adserver.simulation.impl.SimulationDdrService

# How long an impression will live in cache
cache.impression.ttlSeconds=7200

# How long we wait for an RTB win notice before we consider an RTB
# bid to have failed.
Rtb.batchDurationSeconds=60

# Buyer id assigned to Adfonic by AdMeld. Admeld specific
Rtb.admeldbuyer.adfonic.id=10

# How long RTB bid details are cached...should be short, but needs
# to be at least as long as Rtb.batchDurationSeconds.
cache.RtbBidDetails.ttlSeconds=60

# How long we wait for a parallel mode win notice before we consider a
# parallel mode "bid" to have failed.
ParallelMode.batchDurationSeconds=60

# The TTL we use when storing ParallelModeBidDetails in cache, which
# needs to be at least as long as ParallelMode.batchDurationSeconds
cache.ParallelModeBidDetails.ttlSeconds=120

# How long we store click records by default
click.default.ttlSeconds=7200

# How long we store click records for install tracking creatives
click.installTracking.ttlSeconds=2592000

# How long we store click records for conversion tracking creatives
click.conversionTracking.ttlSeconds=2592000

# This optional additional domain, when set, will force adserver to
# set an extra cookie on click responses.  This can be used to enable
# tracker to receive the click cookie.
# NOTE: the leading dot is intentional...do not remove it!
click.additionalCookieDomain=.adfonic.net

# Master switch to control whether or not AdEventLogger does any batching
AdEventLogger.batch.enabled=true

# If batching is enabled, which AdActions may be batched
AdEventLogger.batch.adActions=UNFILLED_REQUEST,AD_SERVED,IMPRESSION,BID_FAILED,AD_SERVED_AND_IMPRESSION

# When batching is enabled, the time span of each batch
AdEventLogger.batch.durationMs=500

###############################################################################
# THIS SECTION IS DUPLICATED IN adfonic-domain-serializer.properties.
# IF YOU MAKE ANY EDITS TO THIS SECTION YOU NEED TO MAKE THE SAME EDITS
# IN adfonic-domain-serializer.properties.
###############################################################################
# Weight boost values.  These properties allow us to "tune" the weight boosts
# for the different targeting factors.  The values below will be multiplied by
# the programmatically determined values (-1.0 to 1.0) and added to the overall
# weight.
# The weightBoost values are interpreted as decimal numbers.  The actual boost
# values will be Math.round'ed after the boost multiplier is applied.
# For example:
# If the calc'd value was 0.7 (on a scale of -1.0 to 1.0) and the boost is 6.0,
# then the weight would be boosted by 0.7 * 6.0 = 4.2 --> 4.
# If the calc'd value was 0.7 (on a scale of -1.0 to 1.0) and the boost is 8.0,
# then the weight would be boosted by 0.7 * 8.0 = 5.6 --> 6.
weightBoost.genderMix=5.0
weightBoost.ageRange=5.0
weightBoost.ecpm=20.0
weightBoost.language=1.0
###############################################################################

# Frequency cap configuration.  This controls how many times a given user
# can be shown a given creative in a given amount of time.
frequencyCap.maxImpressions=0
#frequencyCap.maxImpressions=10
frequencyCap.periodSec=3600

# Timeouts used by all backfill plugins
plugin.http.connectTimeout=1000
plugin.http.readTimeout=2500

# How long keepalive connections live before being recycled (<=0 == forever)
plugin.http.pool.connTtlMs=-1
# Max number of connections in the pool
plugin.http.pool.maxTotal=2000
# Max number of connections in the pool per HTTP "route" (scheme://host:port)
plugin.http.pool.defaultMaxPerRoute=100

# This URL is where people get redirected if they click with an Impression
# externalID that can't be found (i.e. it expired from cache)
ClickThrough.fallbackURL=/error.html

# Pre-Processor Settings
PreProcessor.rulesFile=${adfonic.config.home:/usr/local/adfonic/config}/adserver-pre-processing-rules.xml
# How often we check the last modified timestamp on the rules file
PreProcessor.checkForUpdatesPeriodSec=30

# GB PostalCode Manager Properties
PostalCodeManager.GB.dataFile=${adfonic.data.home:/usr/local/adfonic/data}/gb_postal_codes.csv
PostalCodeManager.GB.checkForUpdatesPeriodSec=120

# US ZipCode Manager Properties
USZipCodeManager.dataFile=${adfonic.data.home:/usr/local/adfonic/data}/ziplist5-geo.csv
USZipCodeManager.checkForUpdatesPeriodSec=120

# DMA Manager Properties
DmaManager.dataFile=${adfonic.data.home:/usr/local/adfonic/data}/zip-to-dma.csv
DmaManager.checkForUpdatesPeriodSec=120

# Canadian Postal Code Manager Properties
CanadianPostalCodeManager.dataFile=${adfonic.data.home:/usr/local/adfonic/data}/ziplist5-geo-ca.csv
CanadianPostalCodeManager.checkForUpdatesPeriodSec=120

# Chinese Postal Code Manager Properties
ChinesePostalCodeManager.dataFile=${adfonic.data.home:/usr/local/adfonic/data}/cn_postal_codes.csv
ChinesePostalCodeManager.checkForUpdatesPeriodSec=120

# Austrian Postal Code Manager Properties
AustrianPostalCodeManager.dataFile=${adfonic.data.home:/usr/local/adfonic/data}/at_postal_codes.csv
AustrianPostalCodeManager.checkForUpdatesPeriodSec=120

# Spanish Postal Code Manager Properties
SpanishPostalCodeManager.dataFile=${adfonic.data.home:/usr/local/adfonic/data}/es_postal_codes.csv
SpanishPostalCodeManager.checkForUpdatesPeriodSec=120

# PostalCode ID Manager Properties
PostalCodeIdManager.dataFile=${adfonic.data.home:/usr/local/adfonic/data}/postal-codes.csv
PostalCodeIdManager.checkForUpdatesPeriodSec=120

# This radius is used when finding GB postal codes
geotargeting.GB.postalCode.radius.mi=20

# This radius is used when trying to resolve a DMA by zip code
geotargeting.DMA.zipCode.radius.mi=5

DomainCache.useMemory=true
DomainCache.reserializedJmsTopic=adfonic.reserialized.DomainCache-default
DomainCache.label=default

AdserverDomainCache.useMemory=true
# Default shard
AdserverDomainCache.label=default
AdserverDomainCache.reserializedJmsTopic=adfonic.reserialized.AdserverDomainCache-default
# Mobclix shard
#AdserverDomainCache.label=mobclix
#AdserverDomainCache.reserializedJmsTopic=adfonic.reserialized.AdserverDomainCache-mobclix
# Smaato shard
#AdserverDomainCache.label=smaato
#AdserverDomainCache.reserializedJmsTopic=adfonic.reserialized.AdserverDomainCache-smaato
# RTB shard
#AdserverDomainCache.label=shard-rtb
#AdserverDomainCache.reserializedJmsTopic=adfonic.reserialized.AdserverDomainCache-shard-rtb

Rtb.approx.sampling.rate=100


PluginCategoryManager.dataFile=${adfonic.data.home:/usr/local/adfonic/data}/plugin-categories.csv
PluginCategoryManager.checkForUpdatesPeriodSec=120

# Quova HTTP client properties
# How many times we allow HttpClient to retry a failed request before bailing
QuovaClient.retryCount=2
# Whether we allow requests to be retried even if the request was successfully
# sent already.  This is really only useful to disable for transactional stuff
# where requests aren't idempotent.  For Quova, we're just doing lookups, so
# we don't care whether the request body had been sent or not...retry.
QuovaClient.requestSentRetryEnabled=true
# Once we've gone into failover mode, retry the primary again every N ms
QuovaClient.retryPrimaryIntervalMs=30000
# How long keepalive connections live before being recycled (<=0 == forever)
QuovaClient.pool.connTtlMs=-1
# Max number of connections in the pool
QuovaClient.pool.maxTotal=50
# Max number of connections in the pool per HTTP "route" (scheme://host:port)
QuovaClient.pool.defaultMaxPerRoute=50
# Comma-separated list of host[:port] (port 80 assumed if omitted)
QuovaClient.serverList=tstgds01:8080
#QuovaClient.serverList=rfgds05:8080,rfgds06:8080,rfgds07:8080,rfgds08:8080
# Whether HTTPS should be used on all Quova requests
QuovaClient.useHttps=false
# The base URI of the GDS ipinfo service (IP address gets appended)
QuovaClient.baseUri=/gds/v1/ipinfo/

# URL at which we access the tracker.
# NOTE: do NOT include a slash at the end.  The slash at the
# beginning of the URI is added by adserver.
tracker.base.url=http://tracker.qa.adfonic.net
# How long keepalive connections live before being recycled (<=0 == forever)
tracker.pool.connTtlMs=-1
# Max number of connections in the pool
tracker.pool.maxTotal=10
# Max number of connections in the pool per HTTP "route" (scheme://host:port)
tracker.pool.defaultMaxPerRoute=10
# if the value is true..adserver Will not use http client to call tracker..301 redirect the request to tracker
tracker.redirection=false

# URL at which we access iws (internal web services)
# NOTE: do NOT include a slash at the end.  The slash at the
# beginning of the URI is added by adserver.
iws.base.url=http://iws.qa.adfonic.com
# How long keepalive connections live before being recycled (<=0 == forever)
iws.pool.connTtlMs=-1
# Max number of connections in the pool
iws.pool.maxTotal=1
# Max number of connections in the pool per HTTP "route" (scheme://host:port)
iws.pool.defaultMaxPerRoute=1

# This allows StoppageManager to run in developer/test mode.  In environments
# in which we can't hit IWS until after tomcat has finished starting up (i.e.
# developer local setups and on test), we need to allow delayed initialization.
# NOTE: In production, lazyInit should always be set to false, which means it
# will hit IWS during tomcat startup.
StoppageManager.lazyInit=true

# Virtual hosts configuration
VhostManager.configFile=${adfonic.config.home:/usr/local/adfonic/config}/adserver-vhosts.xml

# Relative URL of the 1x1 pixel image
pixel.uri=/pixel.gif

# adx server url
prefix.adx=https://ad-x.co.uk/

# Regular expression used to determine whether or not a VIDEO destination
# is a Yospace video URL.  When this pattern matches, we'll automatically
# append the "clickId=...&urlId=..." parameters to the URL.
#
# This pattern looks for any of the following variations:
#    *://yospace.com/*
#    *://yospace.com:*
#    *://*.yospace.com/*
#    *://*.yospace.com:*
Yospace.destination.pattern=^[^\:]+\:/(/|/.+.)yospace.com[/\:].+$

# Value of the "urlId" param we'll append to every Yospace video URL.
# This is a numeric reference to one of our tracker URLs we've arranged
# with Yospace.  The idea here is that we can control which of our
# environments (test, production, etc.) gets called when Yospace fires
# off their view tracking request to us.
#
# These are the pre-arranged IDs and their respective URLs:
#
# 1 = http://tracker.adfonic.net/vs/{clickId}?viewMs=...&clipMs=...
# 2 = http://tracker.test.adfonic.net/vs/{clickId}?viewMs=...&clipMs=...
#
Yospace.tracker.urlId=2

# Citrusleaf cache properties
Citrusleaf.hostName=tstgds01
Citrusleaf.port=3000
Citrusleaf.namespace.cache=AdfonicQA
Citrusleaf.connectTimeoutMs=10000
Citrusleaf.operationTimeoutMs=5000
Citrusleaf.optimisedRetargeting=true
Citrusleaf.timeReleaseCache=50000


# Backup (formerly CSV) logging settings
BackupLogger.enabled=true
BackupLogger.fileName=/tmp/adserver-backup
BackupLogger.datePattern=yyyy-MM-dd-HH
BackupLogger.maxFileSize=1MB


##ECPM data cache refresh time in milli (default=60000)
ecpm.refresh.intervalMs=180000

##ECPM data cache autoloading enabled (default=false)
ecpm.datacache.enable.autorefresh=true


##############################################################################
# LOAD TESTING CONFIGURATION
# These properties are not required to be defined.  When undefined, we use
# normal (non-load-testing) defaults.  Uncomment any/all of these when doing
# load testing.
##############################################################################
# Whether we should block JMS traffic to the embedded queues
#AdserverJms.blockEmbedded=true
# Whether we should block JMS traffic from embedded -> ADMQ
#AdserverJms.blockAdmq=true
# Whether proxied tracker calls should be blocked
#tracker.blocked=true
# Whether frequency cap writes should be blocked (only reads allowed)
#frequencyCap.blockWrites=true
##############################################################################

#Retargtting Allowed properties for Cookie(Pahse 1)
retargeting.cookieName=opt-out


adtruth_prefs_js_url=http://asset.qa.adfonic.net/adtruth/prefs.js
adtruth_tracker_beamer_url=http://tracker.adfonic.net/adtruth/click/noscript.gif

customClickTemplate.voltari.id=299
customClickTemplate.voltari.template=http://click.ord.adcube.us/e/collect/click/impression/%click%/accountable/%willAccount%/%creative%?url=%destination_escaped%

cachedb.RtbIdServiceEnable=true
# How long we wait for an RTB win notice before we consider an RTB
# bid to have failed.
#Rtb.batchDurationSeconds=5
# Buyer id assigned to Adfonic by AdMeld. Admeld specific
#Rtb.admeldbuyer.adfonic.id=10

# Data Cache (DB) Properties
cachedb.jdbc.driverClassName=com.mysql.jdbc.Driver
cachedb.jdbc.url=jdbc:mysql://qadb01:3306/adfonic?autoReconnect=true
cachedb.jdbc.username=adfonic
cachedb.jdbc.password=adfon1c
cachedb.jdbc.maxActive=10
cachedb.jdbc.maxWait=5000
cachedb.jdbc.minIdle=1
cachedb.jdbc.maxIdle=3
cachedb.jdbc.validationQuery=SELECT 1
cachedb.jdbc.timeBetweenEvictionRunsMillis=60000
cachedb.jdbc.testWhileIdle=false
cachedb.jdbc.numTestsPerEvictionRun=3
cachedb.jdbc.minEvictableIdleTimeMillis=30000

# Cache Delegator Properties
load.cacheDelegator.ecpm.compute=true
load.cacheDelegator.categories=true
load.cacheDelegator.creatives=true
use.cacheDelegator.ecpm.compute=true
use.cacheDelegator.categories=true
use.cacheDelegator.creatives=false

#List of publishers for multitenant counters
counter.publishers=166,314,326,354,343,349,344,342,346,351,353,364,169,43

# Weve properties
weve.beacon.url=http://weve.qa.adfonic.net/weve/bc/
weve.company_ids=1,2,3,4,5,6,320
# Truste config
truste.weve.aeskey=<not used>
truste.weve.pid=adfonic01
truste.weve.web-aid=adfonicweveqa01
truste.weve.app-aid=adfonicweveqa01
truste.default.aeskey=b138c8ac-1050-44b2-b071-ed32b940c6fb
truste.default.pid=adfonic01
truste.default.web-aid=adfonic02
truste.default.app-aid=adfonic01

testad.destination.url=byyd-tech.com
# RTB encryption keys

# AdX assigned encryption and integrity keys
Rtb.Enc.dcadx.eKey64=sIxwz7yw62yrfoLGt12lIHKuYrK/S5kLuApI2BQe7Ac=
Rtb.Enc.dcadx.iKey64=v3fsVcMBMMHYzRhi7SpM0sdqwzvAxM6KPTu9OtVod5I=

# OpenX RTB encryption and integrity keys
Rtb.Enc.openxdef.eKeyX=79CF4D63FB4284167E6B9C4A8764A77564F4C29E4BE1B406EB42339076A063F0
Rtb.Enc.openxdef.iKeyX=70B1536BF4D78173421DBDCA816440E5580384A4E539AAD07BDE61F27EC5E2EE

#Rubicon config--encryption
Rtb.Enc.rubicondef.pass=68ADBDSM9WQEK24A

# should be equal to appnexus' memberid for adfonic
Rtb.seat.id.appnxs=696
Rtb.appnxs.routing.wsbaseurl=http://api.qa.byyd.net

load.cacheDelegator.ecpm.compute=true
load.cacheDelegator.categories=true
load.cacheDelegator.creatives=true
load.cacheDelegator.adspaces=true
use.cacheDelegator.ecpm.compute=true
use.cacheDelegator.categories=true
use.cacheDelegator.creatives=true
use.cacheDelegator.adspaces=true