############################################################
#    Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#    Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
handlers= java.util.logging.ConsoleHandler

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= FINE

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
java.util.logging.FileHandler.pattern = %h/java%u.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter

# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.ConsoleHandler.layout.ConversionPattern=%d{MM-dd@HH:mm:ss} %5p [%t](%F:%L) - %m%n

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

com.adfonic.audit.DelegatingEntityAuditor.level=FINE
com.byyd.middleware.level=WARNING
com.byyd.middleware.audit.level=FINE
com.byyd.middleware.dao.jpa.level=WARNING

org.springframework.level=WARNING
#org.springframework.transaction.level=FINEST
#org.springframework.transaction.interceptor.level=FINEST

org.apache.commons.beanutils.level=INFO

# hibernate
org.hibernate.level=WARNING
org.hibernate.engine.level=WARNING
# log HQL query parser activity
#org.hibernate.hql.ast.AST.level = FINE
# log just the SQL
org.hibernate.SQL.level = FINE
# log JDBC bind parameters ###
#org.hibernate.type.level = FINEST
# log schema export/update ###
#org.hibernate.tool.hbm2ddl.level = FINE
# log HQL parse trees
#org.hibernate.hql.level = FINE
# log cache activity ###
#org.hibernate.cache.level = FINE
# log transaction activity
#org.hibernate.transaction.level = FINE
# log JDBC resource acquisition
#org.hibernate.jdbc.level = FINE
# enable the following line if you want to track down connection ###
# leakages when using DriverManagerConnectionProvider ###
#org.hibernate.connection.DriverManagerConnectionProvider.level = trace
