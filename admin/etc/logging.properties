############################################################
#    Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#    Global properties
############################################################
# "handlers" specifies a comma separated list of log Handler
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
#handlers= java.util.logging.ConsoleHandler
handlers = org.apache.juli.FileHandler

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# Limit the message that are printed on the console to INFO and above.
# java.util.logging.ConsoleHandler.level = FINE
# java.util.logging.ConsoleHandler.formatter = com.adfonic.logging.ThreadedFormatter

org.apache.juli.FileHandler.level = FINE
org.apache.juli.FileHandler.directory = ${catalina.base}/logs
org.apache.juli.FileHandler.prefix = adfonic-admin.
org.apache.juli.FileHandler.formatter = com.adfonic.logging.ThreadedFormatter
#org.apache.juli.FileHandler.formatter = java.util.logging.SimpleFormatter

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# ActiveMQ uses slf4j as of 5.5.0
org.apache.activemq.level=WARNING

com.adfonic.level=FINE
com.adfonic.olap.level=WARNING
com.adfonic.util.SerializationUtils.level=FINE
com.adfonic.audit.DelegatingEntityAuditor.level=INFO
com.byyd.middleware.level=INFO
com.byyd.middleware.iface.service.jpa.GenericCachingEntityResolver.level=SEVERE
com.byyd.middleware.domainlog.EntityAuditorJpaImpl.level=WARNING

# Pretty this
com.ocpsoft.level=WARNING

# Spring
org.springframework.level=WARNING

# Commons
org.apache.commons.level=WARNING

# CAS
org.jasig.cas.client.level=WARNING

# JSF
javax.enterprise.resource.webcontainer.jsf.level=WARNING
javax.enterprise.resource.webcontainer.jsf.application.level=WARNING
javax.enterprise.resource.webcontainer.jsf.resource.level=WARNING
javax.enterprise.resource.webcontainer.jsf.config.level=WARNING
javax.enterprise.resource.webcontainer.jsf.context.level=WARNING
javax.enterprise.resource.webcontainer.jsf.facelets.level=WARNING
javax.enterprise.resource.webcontainer.jsf.lifecycle.level=WARNING
javax.enterprise.resource.webcontainer.jsf.managedbean.level=WARNING
javax.enterprise.resource.webcontainer.jsf.renderkit.level=WARNING
javax.enterprise.resource.webcontainer.jsf.taglib.level=WARNING
javax.enterprise.resource.webcontainer.jsf.timing.level=WARNING

# Tomahawk
org.apache.myfaces.level=WARNING

# hibernate
org.hibernate.level=SEVERE
#org.hibernate.level=SEVERE
# log HQL query parser activity
#org.hibernate.hql.ast.AST.level = FINE
# log just the SQL
#org.hibernate.SQL.level = FINE
# log JDBC bind parameters ###
#org.hibernate.type.level = FINEST
# log schema export/update ###
#org.hibernate.tool.hbm2ddl.level = FINE
# log HQL parse trees
#org.hibernate.hql.level = FINE
# log cache activity ###
#org.hibernate.cache.level = FINE
# log transaction activity
#org.hibernate.transaction.level = FINE
# log JDBC resource acquisition
#org.hibernate.jdbc.level = FINE
# enable the following line if you want to track down connection ###
# leakages when using DriverManagerConnectionProvider ###
# org.hibernate.connection.DriverManagerConnectionProvider.level = trace

